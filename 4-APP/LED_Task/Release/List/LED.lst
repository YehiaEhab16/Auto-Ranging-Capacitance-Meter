
AVRASM ver. 2.1.30  D:\MicroProcessors 2\Auto-Ranging-Capacitance-Meter\4-APP\LED_Task\Release\List\LED.asm Tue Mar 15 22:01:21 2022

                 
                 
                 ;CodeVisionAVR C Compiler V3.48a Evaluation
                 ;(C) Copyright 1998-2022 Pavel Haiduc, HP InfoTech S.R.L.
                 ;http://www.hpinfotech.ro
                 
                 ;Build configuration    : Release
                 ;Chip type              : ATmega32A
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Mode 2
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32A
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU SPMCSR=0x37
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.EQU __FLASH_PAGE_SIZE=0x40
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETW1P
                 	LD   R30,X+
                 	LD   R31,X
                 	SBIW R26,1
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD1P_INC
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X+
                 	LD   R23,X+
                 	.ENDM
                 
                 	.MACRO __GETD1P_DEC
                 	LD   R23,-X
                 	LD   R22,-X
                 	LD   R31,-X
                 	LD   R30,-X
                 	.ENDM
                 
                 	.MACRO __PUTDP1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTDP1_DEC
                 	ST   -X,R23
                 	ST   -X,R22
                 	ST   -X,R31
                 	ST   -X,R30
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __CPD10
                 	SBIW R30,0
                 	SBCI R22,0
                 	SBCI R23,0
                 	.ENDM
                 
                 	.MACRO __CPD20
                 	SBIW R26,0
                 	SBCI R24,0
                 	SBCI R25,0
                 	.ENDM
                 
                 	.MACRO __ADDD12
                 	ADD  R30,R26
                 	ADC  R31,R27
                 	ADC  R22,R24
                 	ADC  R23,R25
                 	.ENDM
                 
                 	.MACRO __ADDD21
                 	ADD  R26,R30
                 	ADC  R27,R31
                 	ADC  R24,R22
                 	ADC  R25,R23
                 	.ENDM
                 
                 	.MACRO __SUBD12
                 	SUB  R30,R26
                 	SBC  R31,R27
                 	SBC  R22,R24
                 	SBC  R23,R25
                 	.ENDM
                 
                 	.MACRO __SUBD21
                 	SUB  R26,R30
                 	SBC  R27,R31
                 	SBC  R24,R22
                 	SBC  R25,R23
                 	.ENDM
                 
                 	.MACRO __ANDD12
                 	AND  R30,R26
                 	AND  R31,R27
                 	AND  R22,R24
                 	AND  R23,R25
                 	.ENDM
                 
                 	.MACRO __ORD12
                 	OR   R30,R26
                 	OR   R31,R27
                 	OR   R22,R24
                 	OR   R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD12
                 	EOR  R30,R26
                 	EOR  R31,R27
                 	EOR  R22,R24
                 	EOR  R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD21
                 	EOR  R26,R30
                 	EOR  R27,R31
                 	EOR  R24,R22
                 	EOR  R25,R23
                 	.ENDM
                 
                 	.MACRO __COMD1
                 	COM  R30
                 	COM  R31
                 	COM  R22
                 	COM  R23
                 	.ENDM
                 
                 	.MACRO __MULD2_2
                 	LSL  R26
                 	ROL  R27
                 	ROL  R24
                 	ROL  R25
                 	.ENDM
                 
                 	.MACRO __LSRD1
                 	LSR  R23
                 	ROR  R22
                 	ROR  R31
                 	ROR  R30
                 	.ENDM
                 
                 	.MACRO __LSLD1
                 	LSL  R30
                 	ROL  R31
                 	ROL  R22
                 	ROL  R23
                 	.ENDM
                 
                 	.MACRO __ASRB4
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	.ENDM
                 
                 	.MACRO __ASRW8
                 	MOV  R30,R31
                 	CLR  R31
                 	SBRC R30,7
                 	SER  R31
                 	.ENDM
                 
                 	.MACRO __LSRD16
                 	MOV  R30,R22
                 	MOV  R31,R23
                 	LDI  R22,0
                 	LDI  R23,0
                 	.ENDM
                 
                 	.MACRO __LSLD16
                 	MOV  R22,R30
                 	MOV  R23,R31
                 	LDI  R30,0
                 	LDI  R31,0
                 	.ENDM
                 
                 	.MACRO __CWD1
                 	MOV  R22,R31
                 	ADD  R22,R22
                 	SBC  R22,R22
                 	MOV  R23,R22
                 	.ENDM
                 
                 	.MACRO __CWD2
                 	MOV  R24,R27
                 	ADD  R24,R24
                 	SBC  R24,R24
                 	MOV  R25,R24
                 	.ENDM
                 
                 	.MACRO __SETMSD1
                 	SER  R31
                 	SER  R22
                 	SER  R23
                 	.ENDM
                 
                 	.MACRO __ADDW1R15
                 	CLR  R0
                 	ADD  R30,R15
                 	ADC  R31,R0
                 	.ENDM
                 
                 	.MACRO __ADDW2R15
                 	CLR  R0
                 	ADD  R26,R15
                 	ADC  R27,R0
                 	.ENDM
                 
                 	.MACRO __EQB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __NEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRNE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __CPW01
                 	CLR  R0
                 	CP   R0,R30
                 	CPC  R0,R31
                 	.ENDM
                 
                 	.MACRO __CPW02
                 	CLR  R0
                 	CP   R0,R26
                 	CPC  R0,R27
                 	.ENDM
                 
                 	.MACRO __CPD12
                 	CP   R30,R26
                 	CPC  R31,R27
                 	CPC  R22,R24
                 	CPC  R23,R25
                 	.ENDM
                 
                 	.MACRO __CPD21
                 	CP   R26,R30
                 	CPC  R27,R31
                 	CPC  R24,R22
                 	CPC  R25,R23
                 	.ENDM
                 
                 	.MACRO __BSTB1
                 	CLT
                 	TST  R30
                 	BREQ PC+2
                 	SET
                 	.ENDM
                 
                 	.MACRO __LNEGB1
                 	TST  R30
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LNEGW1
                 	OR   R30,R31
                 	LDI  R30,1
                 	BREQ PC+2
                 	LDI  R30,0
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2M
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETW1Z
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETD1Z
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETW2X
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETD2X
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0035 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _0x69:
00002a 0000
D:\MicroProcessors 2\Auto-Ranging-Capacitance-Meter\4-APP\LED_Task\Release\List\LED.asm(1445): warning: .cseg .db misalignment - padding zero byte
00002b 0001      	.DB  0x0,0x0,0x1
                 _0x6A:
00002c 0100
00002d 1400      	.DB  0x0,0x1,0x0,0x14
                 
                 __GLOBAL_INI_TBL:
00002e 0003      	.DW  0x03
00002f 0260      	.DW  _Red
000030 0054      	.DW  _0x69*2
                 
000031 0004      	.DW  0x04
000032 0263      	.DW  _PushButton
000033 0058      	.DW  _0x6A*2
                 
                 _0xFFFFFFFF:
000034 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000035 94f8      	CLI
000036 27ee      	CLR  R30
000037 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000038 e0f1      	LDI  R31,1
000039 bff5      	OUT  MCUCR,R31
00003a bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
00003b e08d      	LDI  R24,(14-2)+1
00003c e0a2      	LDI  R26,2
00003d 27bb      	CLR  R27
                 __CLEAR_REG:
00003e 93ed      	ST   X+,R30
00003f 958a      	DEC  R24
000040 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000041 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000042 e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000043 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000044 93ed      	ST   X+,R30
000045 9701      	SBIW R24,1
000046 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000047 e5ec      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000048 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000049 9185      	LPM  R24,Z+
00004a 9195      	LPM  R25,Z+
00004b 9700      	SBIW R24,0
00004c f061      	BREQ __GLOBAL_INI_END
00004d 91a5      	LPM  R26,Z+
00004e 91b5      	LPM  R27,Z+
00004f 9005      	LPM  R0,Z+
000050 9015      	LPM  R1,Z+
000051 01bf      	MOVW R22,R30
000052 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000053 9005      	LPM  R0,Z+
000054 920d      	ST   X+,R0
000055 9701      	SBIW R24,1
000056 f7e1      	BRNE __GLOBAL_INI_LOOP
000057 01fb      	MOVW R30,R22
000058 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000059 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
00005a bfed      	OUT  SPL,R30
00005b e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00005c bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00005d e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00005e e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00005f 940c 0182 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0x00
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 ; 0000 000D {
                 
                 	.CSEG
                 _DIO_u8SetPinValue:
                 ; .FSTART _DIO_u8SetPinValue
000061 d165      	RCALL __SAVELOCR4
000062 2f0a      	MOV  R16,R26
000063 813c      	LDD  R19,Y+4
000064 812d      	LDD  R18,Y+5
                 ;	Copy_u8Port -> R18
                 ;	Copy_u8Pin -> R19
                 ;	Copy_u8Value -> R16
                 ;	Local_u8ErrorState -> R17
000065 e010      	LDI  R17,0
000066 3038      	CPI  R19,8
000067 f008      	BRLO PC+2
000068 c056      	RJMP _0x3
000069 3000      	CPI  R16,0
00006a f551      	BRNE _0x4
00006b 2fe2      	MOV  R30,R18
00006c e0f0      	LDI  R31,0
00006d 9730      	SBIW R30,0
00006e f431      	BRNE _0x8
00006f d124      	RCALL SUBOPT_0x0
000070 95e0      	COM  R30
000071 21e1      	AND  R30,R1
000072 93e0 003b 	STS  59,R30
000074 c01f      	RJMP _0x7
                 _0x8:
000075 30e1      	CPI  R30,LOW(0x1)
000076 e0a0      	LDI  R26,HIGH(0x1)
000077 07fa      	CPC  R31,R26
000078 f431      	BRNE _0x9
000079 d120      	RCALL SUBOPT_0x1
00007a 95e0      	COM  R30
00007b 21e1      	AND  R30,R1
00007c 93e0 0038 	STS  56,R30
00007e c015      	RJMP _0x7
                 _0x9:
00007f 30e2      	CPI  R30,LOW(0x2)
000080 e0a0      	LDI  R26,HIGH(0x2)
000081 07fa      	CPC  R31,R26
000082 f431      	BRNE _0xA
000083 d11c      	RCALL SUBOPT_0x2
000084 95e0      	COM  R30
000085 21e1      	AND  R30,R1
000086 93e0 0035 	STS  53,R30
000088 c00b      	RJMP _0x7
                 _0xA:
000089 30e3      	CPI  R30,LOW(0x3)
00008a e0a0      	LDI  R26,HIGH(0x3)
00008b 07fa      	CPC  R31,R26
00008c f431      	BRNE _0xC
00008d d118      	RCALL SUBOPT_0x3
00008e 95e0      	COM  R30
00008f 21e1      	AND  R30,R1
000090 93e0 0032 	STS  50,R30
000092 c001      	RJMP _0x7
                 _0xC:
000093 e011      	LDI  R17,LOW(1)
                 _0x7:
000094 c029      	RJMP _0xD
                 _0x4:
000095 3001      	CPI  R16,1
000096 f531      	BRNE _0xE
000097 2fe2      	MOV  R30,R18
000098 e0f0      	LDI  R31,0
000099 9730      	SBIW R30,0
00009a f429      	BRNE _0x12
00009b d0f8      	RCALL SUBOPT_0x0
00009c 29e1      	OR   R30,R1
00009d 93e0 003b 	STS  59,R30
00009f c01c      	RJMP _0x11
                 _0x12:
0000a0 30e1      	CPI  R30,LOW(0x1)
0000a1 e0a0      	LDI  R26,HIGH(0x1)
0000a2 07fa      	CPC  R31,R26
0000a3 f429      	BRNE _0x13
0000a4 d0f5      	RCALL SUBOPT_0x1
0000a5 29e1      	OR   R30,R1
0000a6 93e0 0038 	STS  56,R30
0000a8 c013      	RJMP _0x11
                 _0x13:
0000a9 30e2      	CPI  R30,LOW(0x2)
0000aa e0a0      	LDI  R26,HIGH(0x2)
0000ab 07fa      	CPC  R31,R26
0000ac f429      	BRNE _0x14
0000ad d0f2      	RCALL SUBOPT_0x2
0000ae 29e1      	OR   R30,R1
0000af 93e0 0035 	STS  53,R30
0000b1 c00a      	RJMP _0x11
                 _0x14:
0000b2 30e3      	CPI  R30,LOW(0x3)
0000b3 e0a0      	LDI  R26,HIGH(0x3)
0000b4 07fa      	CPC  R31,R26
0000b5 f429      	BRNE _0x16
0000b6 d0ef      	RCALL SUBOPT_0x3
0000b7 29e1      	OR   R30,R1
0000b8 93e0 0032 	STS  50,R30
0000ba c001      	RJMP _0x11
                 _0x16:
0000bb e011      	LDI  R17,LOW(1)
                 _0x11:
0000bc c001      	RJMP _0x17
                 _0xE:
0000bd e011      	LDI  R17,LOW(1)
                 _0x17:
                 _0xD:
0000be c001      	RJMP _0x18
                 _0x3:
0000bf e011      	LDI  R17,LOW(1)
                 _0x18:
0000c0 2fe1      	MOV  R30,R17
0000c1 d10c      	RCALL __LOADLOCR4
0000c2 9626      	ADIW R28,6
0000c3 9508      	RET
                 ; .FEND
                 ;	Copy_u8Port -> R19
                 ;	Copy_u8Value -> R16
                 ;	Local_u8ErrorState -> R17
                 _DIO_u8TogglePinValue:
                 ; .FSTART _DIO_u8TogglePinValue
0000c4 d102      	RCALL __SAVELOCR4
0000c5 2f0a      	MOV  R16,R26
0000c6 813c      	LDD  R19,Y+4
                 ;	Copy_u8Port -> R19
                 ;	Copy_u8Pin -> R16
                 ;	Local_u8ErrorState -> R17
0000c7 e010      	LDI  R17,0
0000c8 3008      	CPI  R16,8
0000c9 f550      	BRSH _0x21
0000ca 2fe3      	MOV  R30,R19
0000cb e0f0      	LDI  R31,0
0000cc 9730      	SBIW R30,0
0000cd f431      	BRNE _0x25
0000ce 9010 003b 	LDS  R1,59
0000d0 d0db      	RCALL SUBOPT_0x4
0000d1 93e0 003b 	STS  59,R30
0000d3 c01f      	RJMP _0x24
                 _0x25:
0000d4 30e1      	CPI  R30,LOW(0x1)
0000d5 e0a0      	LDI  R26,HIGH(0x1)
0000d6 07fa      	CPC  R31,R26
0000d7 f431      	BRNE _0x26
0000d8 9010 0038 	LDS  R1,56
0000da d0d1      	RCALL SUBOPT_0x4
0000db 93e0 0038 	STS  56,R30
0000dd c015      	RJMP _0x24
                 _0x26:
0000de 30e2      	CPI  R30,LOW(0x2)
0000df e0a0      	LDI  R26,HIGH(0x2)
0000e0 07fa      	CPC  R31,R26
0000e1 f431      	BRNE _0x27
0000e2 9010 0035 	LDS  R1,53
0000e4 d0c7      	RCALL SUBOPT_0x4
0000e5 93e0 0035 	STS  53,R30
0000e7 c00b      	RJMP _0x24
                 _0x27:
0000e8 30e3      	CPI  R30,LOW(0x3)
0000e9 e0a0      	LDI  R26,HIGH(0x3)
0000ea 07fa      	CPC  R31,R26
0000eb f431      	BRNE _0x29
0000ec 9010 0032 	LDS  R1,50
0000ee d0bd      	RCALL SUBOPT_0x4
0000ef 93e0 0032 	STS  50,R30
0000f1 c001      	RJMP _0x24
                 _0x29:
0000f2 e011      	LDI  R17,LOW(1)
                 _0x24:
0000f3 c001      	RJMP _0x2A
                 _0x21:
0000f4 e011      	LDI  R17,LOW(1)
                 _0x2A:
0000f5 2fe1      	MOV  R30,R17
0000f6 d0d7      	RCALL __LOADLOCR4
0000f7 9625      	ADIW R28,5
0000f8 9508      	RET
                 ; .FEND
                 _DIO_u8GetPinValue:
                 ; .FSTART _DIO_u8GetPinValue
0000f9 d0cb      	RCALL __SAVELOCR6
0000fa 019d      	MOVW R18,R26
0000fb 810e      	LDD  R16,Y+6
0000fc 815f      	LDD  R21,Y+7
                 ;	Copy_u8Port -> R21
                 ;	Copy_u8Pin -> R16
                 ;	*Copy_pu8Value -> R18,R19
                 ;	Local_u8ErrorState -> R17
0000fd e010      	LDI  R17,0
0000fe 2400      	CLR  R0
0000ff 1602      	CP   R0,R18
000100 0603      	CPC  R0,R19
000101 f011      	BREQ _0x2C
000102 3008      	CPI  R16,8
000103 f008      	BRLO _0x2D
                 _0x2C:
000104 c022      	RJMP _0x2B
                 _0x2D:
000105 2fe5      	MOV  R30,R21
000106 e0f0      	LDI  R31,0
000107 9730      	SBIW R30,0
000108 f421      	BRNE _0x31
000109 91a0 0039 	LDS  R26,57
00010b d0a5      	RCALL SUBOPT_0x5
00010c c019      	RJMP _0x30
                 _0x31:
00010d 30e1      	CPI  R30,LOW(0x1)
00010e e0a0      	LDI  R26,HIGH(0x1)
00010f 07fa      	CPC  R31,R26
000110 f421      	BRNE _0x32
000111 91a0 0036 	LDS  R26,54
000113 d09d      	RCALL SUBOPT_0x5
000114 c011      	RJMP _0x30
                 _0x32:
000115 30e2      	CPI  R30,LOW(0x2)
000116 e0a0      	LDI  R26,HIGH(0x2)
000117 07fa      	CPC  R31,R26
000118 f421      	BRNE _0x33
000119 91a0 0033 	LDS  R26,51
00011b d095      	RCALL SUBOPT_0x5
00011c c009      	RJMP _0x30
                 _0x33:
00011d 30e3      	CPI  R30,LOW(0x3)
00011e e0a0      	LDI  R26,HIGH(0x3)
00011f 07fa      	CPC  R31,R26
000120 f421      	BRNE _0x35
000121 91a0 0030 	LDS  R26,48
000123 d08d      	RCALL SUBOPT_0x5
000124 c001      	RJMP _0x30
                 _0x35:
000125 e011      	LDI  R17,LOW(1)
                 _0x30:
000126 c001      	RJMP _0x36
                 _0x2B:
000127 e011      	LDI  R17,LOW(1)
                 _0x36:
000128 2fe1      	MOV  R30,R17
000129 d0a2      	RCALL __LOADLOCR6
00012a 9628      	ADIW R28,8
00012b 9508      	RET
                 ; .FEND
                 ; 0000 000E {
                 _PORT_voidInit:
                 ; .FSTART _PORT_voidInit
00012c e0e1      	LDI  R30,LOW(1)
00012d 93e0 003a 	STS  58,R30
00012f e0e0      	LDI  R30,LOW(0)
000130 93e0 0037 	STS  55,R30
000132 93e0 0034 	STS  52,R30
000134 93e0 0031 	STS  49,R30
000136 e0e2      	LDI  R30,LOW(2)
000137 93e0 003b 	STS  59,R30
000139 e0e0      	LDI  R30,LOW(0)
00013a 93e0 0038 	STS  56,R30
00013c 93e0 0035 	STS  53,R30
00013e 93e0 0032 	STS  50,R30
000140 9508      	RET
                 ; .FEND
                 ;	Copy_u8Port -> R19
                 ;	Copy_u8State -> R16
                 ;	Local_ErrorState -> R17
                 ;	Copy_u8Port -> R18
                 ;	Copy_u8Pin -> R19
                 ;	Copy_u8State -> R16
                 ;	Local_ErrorState -> R17
                 ; 0000 0010 {
                 ;	*Copy_pu8StructLed -> R16,R17
                 _LED_voidLedOff:
                 ; .FSTART _LED_voidLedOff
000141 931a      	ST   -Y,R17
000142 930a      	ST   -Y,R16
000143 018d      	MOVW R16,R26
                 ;	*Copy_pu8StructLed -> R16,R17
000144 01f8      	MOVW R30,R16
000145 81a2      	LDD  R26,Z+2
000146 30a1      	CPI  R26,LOW(0x1)
000147 f419      	BRNE _0x61
000148 d06e      	RCALL SUBOPT_0x6
000149 e0a0      	LDI  R26,LOW(0)
00014a c002      	RJMP _0x77
                 _0x61:
00014b d06b      	RCALL SUBOPT_0x6
00014c e0a1      	LDI  R26,LOW(1)
                 _0x77:
00014d df13      	RCALL _DIO_u8SetPinValue
00014e c008      	RJMP _0x2000001
                 ; .FEND
                 _LED_voidLedToggle:
                 ; .FSTART _LED_voidLedToggle
00014f 931a      	ST   -Y,R17
000150 930a      	ST   -Y,R16
000151 018d      	MOVW R16,R26
                 ;	*Copy_pu8StructLed -> R16,R17
000152 91ec      	LD   R30,X
000153 93ea      	ST   -Y,R30
000154 01f8      	MOVW R30,R16
000155 81a1      	LDD  R26,Z+1
000156 df6d      	RCALL _DIO_u8TogglePinValue
                 _0x2000001:
000157 9109      	LD   R16,Y+
000158 9119      	LD   R17,Y+
000159 9508      	RET
                 ; .FEND
                 ;	*Copy_pu8StructLed -> R18,R19
                 ;	Copy_u8Value -> R17
                 ; 0000 0011 {
                 _SW_u8ReadSwicth:
                 ; .FSTART _SW_u8ReadSwicth
00015a d06c      	RCALL __SAVELOCR4
00015b 019d      	MOVW R18,R26
                 ;	*Copy_pu8Struct -> R18,R19
                 ;	Local_u8SwicthValue -> R17
                 ;	Local_u8Value -> R16
00015c 01f9      	MOVW R30,R18
00015d 81e2      	LDD  R30,Z+2
00015e 30e0      	CPI  R30,0
00015f f479      	BRNE _0x65
000160 d05d      	RCALL SUBOPT_0x7
000161 e0a1      	LDI  R26,LOW(1)
000162 defe      	RCALL _DIO_u8SetPinValue
000163 d05a      	RCALL SUBOPT_0x7
000164 b7ad      	IN   R26,SPL
000165 b7be      	IN   R27,SPH
000166 930f      	PUSH R16
000167 df91      	RCALL _DIO_u8GetPinValue
000168 910f      	POP  R16
000169 3000      	CPI  R16,0
00016a f411      	BRNE _0x66
00016b e011      	LDI  R17,LOW(1)
00016c c001      	RJMP _0x67
                 _0x66:
00016d e010      	LDI  R17,LOW(0)
                 _0x67:
00016e c00a      	RJMP _0x68
                 _0x65:
00016f d04e      	RCALL SUBOPT_0x7
000170 e0a0      	LDI  R26,LOW(0)
000171 deef      	RCALL _DIO_u8SetPinValue
000172 d04b      	RCALL SUBOPT_0x7
000173 b7ad      	IN   R26,SPL
000174 b7be      	IN   R27,SPH
000175 930f      	PUSH R16
000176 df82      	RCALL _DIO_u8GetPinValue
000177 910f      	POP  R16
000178 2f10      	MOV  R17,R16
                 _0x68:
000179 01f9      	MOVW R30,R18
00017a 81e3      	LDD  R30,Z+3
00017b e0f0      	LDI  R31,0
00017c 01df      	MOVW R26,R30
00017d d065      	RCALL _delay_ms
00017e 2fe1      	MOV  R30,R17
00017f d04e      	RCALL __LOADLOCR4
000180 9624      	ADIW R28,4
000181 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 ;void main(void)
                 ; 0000 001B {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 001C PORT_voidInit();
000182 dfa9      	RCALL _PORT_voidInit
                 ; 0000 001D 
                 ; 0000 001E while(1)
                 _0x6B:
                 ; 0000 001F {
                 ; 0000 0020 while(SW_u8ReadSwicth(&PushButton)==PRESSED)
                 _0x6E:
000183 e6a3      	LDI  R26,LOW(_PushButton)
000184 e0b2      	LDI  R27,HIGH(_PushButton)
000185 dfd4      	RCALL _SW_u8ReadSwicth
000186 30e1      	CPI  R30,LOW(0x1)
000187 f439      	BRNE _0x70
                 ; 0000 0021 {
                 ; 0000 0022 LED_voidLedToggle(&Red);
000188 e6a0      	LDI  R26,LOW(_Red)
000189 e0b2      	LDI  R27,HIGH(_Red)
00018a dfc4      	RCALL _LED_voidLedToggle
                 ; 0000 0023 delay_ms(DELAY_TIME);
00018b eea8      	LDI  R26,LOW(1000)
00018c e0b3      	LDI  R27,HIGH(1000)
00018d d055      	RCALL _delay_ms
                 ; 0000 0024 }
00018e cff4      	RJMP _0x6E
                 _0x70:
                 ; 0000 0025 LED_voidLedOff(&Red);
00018f e6a0      	LDI  R26,LOW(_Red)
000190 e0b2      	LDI  R27,HIGH(_Red)
000191 dfaf      	RCALL _LED_voidLedOff
                 ; 0000 0026 }
000192 cff0      	RJMP _0x6B
                 ; 0000 0027 }
                 _0x71:
000193 cfff      	RJMP _0x71
                 ; .FEND
                 
                 	.DSEG
                 _Red:
000260           	.BYTE 0x3
                 _PushButton:
000263           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x0:
000194 9010 003b 	LDS  R1,59
000196 2fe3      	MOV  R30,R19
000197 e0a1      	LDI  R26,LOW(1)
000198 d03a      	RCALL __LSLB12
000199 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1:
00019a 9010 0038 	LDS  R1,56
00019c 2fe3      	MOV  R30,R19
00019d e0a1      	LDI  R26,LOW(1)
00019e d034      	RCALL __LSLB12
00019f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x2:
0001a0 9010 0035 	LDS  R1,53
0001a2 2fe3      	MOV  R30,R19
0001a3 e0a1      	LDI  R26,LOW(1)
0001a4 d02e      	RCALL __LSLB12
0001a5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3:
0001a6 9010 0032 	LDS  R1,50
0001a8 2fe3      	MOV  R30,R19
0001a9 e0a1      	LDI  R26,LOW(1)
0001aa d028      	RCALL __LSLB12
0001ab 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x4:
0001ac 2fe0      	MOV  R30,R16
0001ad e0a1      	LDI  R26,LOW(1)
0001ae d024      	RCALL __LSLB12
0001af 25e1      	EOR  R30,R1
0001b0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x5:
0001b1 2fe0      	MOV  R30,R16
0001b2 d028      	RCALL __LSRB12
0001b3 70e1      	ANDI R30,LOW(0x1)
0001b4 01d9      	MOVW R26,R18
0001b5 93ec      	ST   X,R30
0001b6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x6:
0001b7 01d8      	MOVW R26,R16
0001b8 91ec      	LD   R30,X
0001b9 93ea      	ST   -Y,R30
0001ba 01f8      	MOVW R30,R16
0001bb 81a1      	LDD  R26,Z+1
0001bc 93aa      	ST   -Y,R26
0001bd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x7:
0001be 01d9      	MOVW R26,R18
0001bf 91ec      	LD   R30,X
0001c0 93ea      	ST   -Y,R30
0001c1 01f9      	MOVW R30,R18
0001c2 81a1      	LDD  R26,Z+1
0001c3 93aa      	ST   -Y,R26
0001c4 9508      	RET
                 
                 ;RUNTIME LIBRARY
                 
                 	.CSEG
                 __SAVELOCR6:
0001c5 935a      	ST   -Y,R21
                 __SAVELOCR5:
0001c6 934a      	ST   -Y,R20
                 __SAVELOCR4:
0001c7 933a      	ST   -Y,R19
                 __SAVELOCR3:
0001c8 932a      	ST   -Y,R18
                 __SAVELOCR2:
0001c9 931a      	ST   -Y,R17
0001ca 930a      	ST   -Y,R16
0001cb 9508      	RET
                 
                 __LOADLOCR6:
0001cc 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
0001cd 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
0001ce 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
0001cf 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
0001d0 8119      	LDD  R17,Y+1
0001d1 8108      	LD   R16,Y
0001d2 9508      	RET
                 
                 __LSLB12:
0001d3 23ee      	TST  R30
0001d4 2e0e      	MOV  R0,R30
0001d5 2fea      	MOV  R30,R26
0001d6 f019      	BREQ __LSLB12R
                 __LSLB12L:
0001d7 0fee      	LSL  R30
0001d8 940a      	DEC  R0
0001d9 f7e9      	BRNE __LSLB12L
                 __LSLB12R:
0001da 9508      	RET
                 
                 __LSRB12:
0001db 23ee      	TST  R30
0001dc 2e0e      	MOV  R0,R30
0001dd 2fea      	MOV  R30,R26
0001de f019      	BREQ __LSRB12R
                 __LSRB12L:
0001df 95e6      	LSR  R30
0001e0 940a      	DEC  R0
0001e1 f7e9      	BRNE __LSRB12L
                 __LSRB12R:
0001e2 9508      	RET
                 
                 _delay_ms:
0001e3 9610      	adiw r26,0
0001e4 f039      	breq __delay_ms1
                 __delay_ms0:
0001e5 95a8      	wdr
                +
0001e6 ed80     +LDI R24 , LOW ( 0x7D0 )
0001e7 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
0001e8 9701     +SBIW R24 , 1
0001e9 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
0001ea 9711      	sbiw r26,1
0001eb f7c9      	brne __delay_ms0
                 __delay_ms1:
0001ec 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32A register use summary:
r0 :  11 r1 :  18 r2 :   0 r3 :   0 r4 :   0 r5 :   0 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   0 
r16:  26 r17:  23 r18:  13 r19:  11 r20:   2 r21:   4 r22:   2 r23:   0 
r24:   9 r25:   3 r26:  67 r27:   8 r28:   5 r29:   1 r30: 107 r31:  20 
x  :   7 y  :  28 z  :  13 
Registers used: 20 out of 35 (57.1%)

ATmega32A instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   0 add   :   0 
adiw  :   5 and   :   4 andi  :   1 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :   5 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   2 
brlt  :   0 brmi  :   0 brne  :  29 brpl  :   0 brsh  :   1 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :   0 
cbi   :   0 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :   3 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   4 
cp    :   1 cpc   :  13 cpi   :  21 cpse  :   0 dec   :   3 des   :   0 
eor   :   1 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 
in    :   4 inc   :   0 jmp   :  22 ld    :   6 ldd   :  16 ldi   :  65 
lds   :  12 lpm   :   7 lsl   :   1 lsr   :   1 mov   :  21 movw  :  17 
mul   :   0 muls  :   0 mulsu :   0 neg   :   0 nop   :   0 or    :   4 
ori   :   0 out   :   5 pop   :   2 push  :   2 rcall :  48 ret   :  19 
reti  :   0 rjmp  :  31 rol   :   0 ror   :   0 sbc   :   0 sbci  :   0 
sbi   :   0 sbic  :   0 sbis  :   0 sbiw  :   9 sbr   :   0 sbrc  :   0 
sbrs  :   0 sec   :   0 seh   :   0 sei   :   0 sen   :   0 ser   :   0 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  19 std   :   0 sts   :  20 sub   :   0 subi  :   0 swap  :   0 
tst   :   2 wdr   :   1 
Instructions used: 38 out of 116 (32.8%)

ATmega32A memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0003da    964     22    986   32768   3.0%
[.dseg] 0x000060 0x000267      0      7      7    2048   0.3%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 1 warnings
